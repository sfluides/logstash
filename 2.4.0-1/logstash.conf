input {
	beats {
		port => 5044
    } 
      tcp {
       port => 5545
       type => "syslog"
       codec => multiline {
         pattern => "[0-9]*-[0-9]*-[0-9]*\s*[0-9]*:[0-9]*:[0-9]*."
         what => "previous"
		 negate => true
       }
     }
}
filter {

# Strip ansi color escape sequences from the message
  mutate {
    gsub => ["message", "\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]", ""]
  }
	
  if [type] == "syslog" {
      grok {
        match => [ 
		"message",  
		"<%{POSINT:priority}>%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGPROG:syslog_program}:%{SPACE}%{TIMESTAMP_ISO8601:logtime}%{SPACE}%{LOGLEVEL:loglevel}%{SPACE}%{NUMBER:pid}%{SPACE}---%{SPACE}%{SYSLOG5424SD:threadname}%{SPACE}(?<classname>(?:[\.]?[a-zA-Z0-9-]+\.)*[A-Za-z0-9$]+((.\[\S*\])+)?)%{SPACE}:%{SPACE}%{GREEDYDATA:syslog_message}"
       ]
	  }
    mutate {
      remove_field => ["syslog_timestamp"]
	  gsub => ["syslog_message", "<\d+>.*\sdocker\/\S{12}\[\d*\]:\s", ""]
    }
  }
  if [type] == "filebeat" {
    grok {      
      match => { 
        message => "%{TIMESTAMP_ISO8601:logdate}%{SPACE}\|%{SPACE}%{LOGLEVEL:level}%{SPACE}\|%{SPACE}%{DATA:thread}%{SPACE}\|%{SPACE}%{DATA:category}%{SPACE}\|%{SPACE}%{DATA:bundle}%{SPACE}\|%{SPACE}%{GREEDYDATA:messagetext}"
      }
    }
 
    date {
       match => ["logdate", "yyyy-MM-dd HH:mm:ss,SSS"]
    }
  }
}
  
output {
	if [type] == "syslog" {
		elasticsearch {
			hosts => ["10.185.22.66:9200"]
			index => "logstash-%{+YYYY.MM.dd}"
		}
	}
	if [type] == "filebeat" {
		elasticsearch {
			hosts => ["10.185.22.66:9200"]
			index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
			document_type => "%{[@metadata][type]}"
		}
	}
	stdout { }
}
